/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package SmartCity;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.Box;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

/**
 *
 * @author Kutoma
 */
public class UserInterface extends javax.swing.JFrame {

       
    /** Creates new form LibraryGUI */
    public UserInterface() {

        initComponents();
        
        
    }
    
    private Mothership motherShip;
    private ArrayList<SensorStation> sensorStations;
    private ArrayList<SensorMonitor> sensorMonitors;
    private SensorStation currentSensorStation; 
    private SensorMonitor currentSensorMonitor;

    
    public void start()
    {
        //sensorStations = motherShip.getSensorStations();
        populateSensorStationList();
    }
    
    public void switchScreens()
    {
        //todo
    }
    
    public void switchScreen()
    {
        //todo
    }
    
    public void selectSensorStation()
    {
        //currentSensorStation = motherShip.getSensorStation(sensorStationID);
    }
    
    public void viewSensorStationButtonClicked()
    {
        //switchScreen(sensorStation);
        //sensorMonitors = currentSensorStation.getSensorMonitors();
        populateSensorMonitorList();
    }
    
    public void selectSensorMonitor()
    {
        currentSensorMonitor = currentSensorStation.getSensorMonitor();
    }
    
    public void updateSensorButtonClicked()
    {
        //switchScreen(sensorDetail);
       // populateSensorDetails(sensorMonitorA);
    }
    
    private void populateSensorMonitorList()
    {
        //todo
    }
    
    private void populateSensorStationList()
    {
        //todo
    }
    
    private void populateSensorDetails()
    {
        //todo
    }
    
    public void updateButtonClicked()
    {
        //sensorMonitors.setFrequency(frequency);
        //switchScreen(sensorStation);
    }
    
    public void addSensorButtonClicked()
    {
        //switchScreen(addSensor);
        
        //addSensorSequenceDiagram has same button doing different thing
        //no if condition is in diagram
        
        //currentSensorMonitor = currentSensorMonitor.SensorMonitor();
        //currentSensorStation.addSensorMonitor(currentSensorMonitor);
        //switchScreen(addSensor);
    }
    
    public void changeFrequencyValue()
    {
        //todo
    }
    
    public void changeDescriptionValue()
    {
        //todo
    }
    
    public void changeStatusValue()
    {
        //todo
    }
        
   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 447, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                new UserInterface().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


}
